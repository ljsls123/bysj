<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="demo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="demo.model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="CHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insertUser" parameterType="demo.model.User" useGeneratedKeys="true"
            keyProperty="id">
        insert into `user` (id, email, password, `name`, gender, telephone, address, salt)
        values (#{id, jdbcType = INTEGER}, #{email, jdbcType = VARCHAR}, #{password, jdbcType = CHAR},
                #{name, jdbcType = VARCHAR}, #{gender, jdbcType = CHAR}, #{telephone, jdbcType = VARCHAR},
                #{address, jdbcType = VARCHAR}, #{salt, jdbcType = CHAR})
    </insert>
    <update id="updateUser">
        update user
        <set>
            <if test="null != password">
                password = #{password, jdbcType = CHAR},
            </if>
            <if test="null != telephone">
                telephone = #{telephone, jdbcType = VARCHAR},
            </if>
            <if test="null != address">
                address = #{address, jdbcType = VARCHAR},
            </if>
        </set>
        where id = #{id, jdbcType = INTEGER}
    </update>
    <delete id="deleteUser">
        delete
        from `user`
        where id = #{id};
    </delete>
    <select id="selectByTelephone" resultType="demo.model.User">
        select id,
               email,
               `name`,
               gender,
               telephone,
               address,
               password,
               salt
        from user
        where telephone = #{telephone, jdbcType = VARCHAR}
    </select>
    <select id="getAllUsers" resultMap="BaseResultMap">
        select *
        from `user` limit #{num}, 10;
    </select>
    <select id="getAllUsersCount" resultType="java.lang.Integer">
        select count(*)
        from `user`;
    </select>
</mapper>